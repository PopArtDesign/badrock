<?php

declare(strict_types=1);

$app = $argv[0];
$root = dirname(__DIR__);

$restIndex = null;
$options = getopt('h', ['help'], $restIndex);
$args = array_slice($argv, $restIndex);

if (isset($options['h']) || isset($options['help'])) {
    echo <<<HELP
Protects /wp-admin with basic password authentication by adding rules to .htaccess files.

Usage:

  php {$app} [options] <file>

Options:

  -h, --help  Show this help message

Arguments:

  <file>  Path to htpasswd file

Examples:

  php {$app} config/htpasswd

HELP;
    exit();
}

if (!($args[0] ?? null)) {
    fwrite(STDERR, 'Path to htpasswd file required. Try --help' . PHP_EOL);
    exit(1);
}

$htpasswd = realpath($args[0]);
if (false === $htpasswd || !file_exists($htpasswd)) {
    fwrite(STDERR, 'File not exists: ' . $args[0] . PHP_EOL);
    exit(1);
}

define('RULES_HEADER', '# This rules was generated by running "php tools/htpasswd-admin.php"');

function saveRulesToFile(string $file, string $content): void
{
    $flags = 0;

    if (file_exists($file)) {
        if (false !== strpos(file_get_contents($file), RULES_HEADER)) {
            echo 'File already has rules: ' . $file . PHP_EOL;
            return;
        }

        $flags = $flags | FILE_APPEND;
    }

    $data = PHP_EOL.RULES_HEADER.PHP_EOL.$content.PHP_EOL.PHP_EOL;

    if (false === file_put_contents($file, $data, $flags)) {
        fwrite(STDERR, 'Failed to wirte file: ' . $file . PHP_EOL);
        exit(1);
    }

    echo 'Rules added to file: ' . $file . PHP_EOL;
}

$adminHtaccess = $root . '/public/wp-admin/.htaccess';
$adminRules = <<<HTACCESS
AuthType Basic
AuthName "Protected Area"
AuthUserFile "{$htpasswd}"
require valid-user
Satisfy All
<Files "admin-ajax.php">
    Order allow,deny
    Allow from all
    Satisfy any
</Files>
<Files ~ "\.(css|js)$">
    Order allow,deny
    Allow from all
    Satisfy any
</Files>
HTACCESS;
saveRulesToFile($adminHtaccess, $adminRules);

$loginHtaccess = $root . '/public/.htaccess';
$loginRules = <<<HTACCESS
<Files "wp-login.php">
    AuthType Basic
    AuthName "Protected Area"
    AuthUserFile "{$htpasswd}"
    require valid-user
    Satisfy All
</Files>
HTACCESS;
saveRulesToFile($loginHtaccess, $loginRules);

return 0;
